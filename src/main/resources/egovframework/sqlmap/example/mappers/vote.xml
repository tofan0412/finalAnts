<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ants.com.board.vote.mapper.VoteMapper">

	
   <!-- 해당 프로젝트 투표리스트 가져오기 -->
	<select id="votelist" resultType ="ants.com.board.vote.model.VoteVo" parameterType="ants.com.board.vote.model.VoteVo">
 	
 		SELECT Z.*
	      FROM (
	      	SELECT ROWNUM RNUM , 
	           	   S.*
		      FROM (			               
	              
					select *
					  from (
						    select *
						    from 
						     (select vote_title, vote_id, vote_totalno, to_char(vote_deadline, 'YYYY/MM/DD HH24:MI') as vote_deadline, voted_no,
						                                vote_status, category_id, req_id, b.mem_name, a.mem_id, (to_char(vote_deadline, 'YYYYMMDDHH24MI') - to_char(sysdate, 'YYYYMMDDHH24MI')) as  remain
						                         from vote a, member b
						                         where a.mem_id = b.mem_id
						                           and a.req_id = #{reqId}
						                           and a.del = 'N'
						                           and a.vote_status ='ing'
						                          order by remain)             
						    union all
						    select *
						    from
						    (select vote_title, vote_id, vote_totalno, to_char(vote_deadline, 'YYYY/MM/DD HH24:MI') as vote_deadline, voted_no,
						                                vote_status, category_id, req_id, b.mem_name, a.mem_id, (to_char(vote_deadline, 'YYYYMMDDHH24MI') - to_char(sysdate, 'YYYYMMDDHH24MI')) as  remain
						                         from vote a, member b
						                         where a.mem_id = b.mem_id
						                           and a.req_id = #{reqId}
						                           and a.del = 'N'
						                           and a.vote_status ='finish'
						                           order by remain desc)) 
					     
					<if test="searchKeyword != null and searchKeyword != ''">
				        <choose>
				         	<when test="searchCondition == 1">
								where vote_title LIKE '%' || #{searchKeyword} || '%'
							</when>
				            <when test="searchCondition == 2">
								where mem_name LIKE '%' || #{searchKeyword} || '%'
							</when>
						</choose>
					</if>
			
			  ) S
		
				 WHERE ROWNUM <![CDATA[ <= ]]> ${lastIndex} 
				
	      ) Z
	     <![CDATA[WHERE Z.RNUM > #{firstIndex}]]>
				
	</select>


	<!-- 프로젝트에 따른 이슈게시글 수 조회하기 -->	
	<select id="votePagingListCnt" parameterType="ants.com.board.vote.model.VoteVo"  resultType="int">
		select count(*) as totCnt
		 from vote a, member b
        where a.req_id = #{reqId} 
          and a.del = 'N'
		  and a.mem_id = b.mem_id
		<if test="searchKeyword != null and searchKeyword != ''">
	        <choose>
	         	<when test="searchCondition == 1">
					AND	a.vote_title LIKE '%' || #{searchKeyword} || '%'
				</when>
	            <when test="searchCondition == 2">
					AND	b.mem_name LIKE '%' || #{searchKeyword} || '%'
				</when>
			</choose>
		</if>		
	</select>	
	
	<!-- 다음 투표id조회 (ajax로 등록하기위함) -->
	<select id ="getvoteid" resultType="String">
		SELECT VOTE_SEQ.nextval FROM DUAL
	</select>
	
	<!-- 투표테이블 작성 -->
	<insert id="insertvote" parameterType="ants.com.board.vote.model.VoteVo">
		INSERT INTO vote (
		    vote_id,
		    vote_totalno,
		    vote_title,
		    vote_deadline,
		    vote_status,
		    category_id,
		    req_id,
		    mem_id,
		    del,
		    voted_no
		) VALUES (
		    #{voteId},		    
			(SELECT count(*)
			   FROM projectmember
			  WHERE req_id =#{reqId}
			    AND mem_id in (SELECT mem_id FROM projectmember WHERE promem_status = 'IN' )),		
		    #{voteTitle},
		    TO_DATE(#{voteDeadline},'YYYYMMDDHH24MI'),
		    'ing',
		    '2',
		    #{reqId},
		    #{memId},
		    'N',
		    '0'
		)
	</insert>
	
	<!-- 투표아이템 테이블 작성 -->
	<insert id="insertvoteitem" parameterType="ants.com.board.vote.model.VoteItemVo">
		INSERT INTO voteitem (
				    voteitem_id,
				    voteitem_name,
				    vote_id,
				    vote_count
				    
				) VALUES (
				    vote_seq.nextval,
				    #{voteitemName},
				    #{voteId},
				    0
				)
	</insert>
	
	<!-- 투표아이템 상세 -->
	<select id="voteitemDetail"  parameterType="ants.com.board.vote.model.VoteVo"
							resultType="ants.com.board.vote.model.VoteItemVo">
		SELECT
		    voteitem_id,
		    voteitem_name,
		    vote_id,
		    vote_count
		FROM
		    voteitem
		WHERE
		    vote_id = ${voteId}
		ORDER BY voteitem_id
	</select>
	
	<!-- 투표 상세 -->
	<select id="voteDetail" parameterType="ants.com.board.vote.model.VoteVo"
				resultType="ants.com.board.vote.model.VoteVo">
		select d.vote_title, d.vote_id, d.vote_totalno, to_char(d.vote_deadline, 'YYYY/MM/DD HH24:MI') as vote_deadline,
                 d.vote_status, d.req_id, d.mem_id, e.mem_name,
                 (to_char(d.vote_deadline, 'YYYYMMDDHH24MI') - to_char(sysdate, 'YYYYMMDDHH24MI')) as  remain,
                ( select count(*) 
                    from voteresult a, voteitem b, vote c 
				   where c.vote_id = b.vote_id and b.voteitem_id = a.voteitem_id and  b.vote_id = #{voteId}) as voted_no
				   
          from vote d, member e
          where d.mem_id = e.mem_id
          and vote_id = #{voteId}
          order by vote_deadline 		
	</select>
	
	<!-- 투표결과 상세 -->
	<select id="voteresDetail" parameterType="ants.com.board.vote.model.VoteVo"
				resultType="ants.com.board.vote.model.VoteResultVo">
		SELECT
		    a.voteres_id,
		    a.voteitem_id,
		    a.mem_id	
		FROM
		    voteresult a, voteitem b
		WHERE a.voteitem_id = b.voteitem_id
		and b.vote_id = #{voteId}	
		and a.mem_id =#{memId}
	</select>
	
	
	
	
	<!-- 멤버 투표 -->
	<insert id="voteMember" parameterType="ants.com.board.vote.model.VoteResultVo">
		INSERT INTO voteresult (
							    voteres_id,
							    voteitem_id,
							    mem_id
								) VALUES (
								    VOTERES_SEQ.nextval,
								    #{voteitemId},
								    #{memId}
								)
	</insert>
	
	<!-- 투표 카운트 증가 -->
	<update id="cntupdate" parameterType="ants.com.board.vote.model.VoteResultVo">
			UPDATE voteitem 
			SET vote_count = 
					(SELECT count(*) 
					   FROM voteresult 
					  WHERE voteitem_id =  #{voteitemId})
			WHERE voteitem_id =  #{voteitemId}
		
	</update>

	<!-- 투표기간이 지났을때 finish로 변경 처리 -->
	<update id="paststatusupdate">	
		<![CDATA[
		UPDATE vote SET vote_status = 'finish' where vote_deadline < sysdate
	  	]]>
	</update>
	
	
	
	<!-- 투표할 인원이 모두 투표를 완료했을 경우 finish로 변경처리-->
	<update id="fullstatusupdate" parameterType="ants.com.board.vote.model.VoteResultVo">			
		UPDATE vote SET vote_status = case when vote_totalno = 
				(SELECT count(*) FROM voteresult a, voteitem b, vote c 
				WHERE c.vote_id = b.vote_id AND b.voteitem_id = a.voteitem_id AND  b.vote_id = #{voteId}) then 'finish' else 'ing' end,
                
                voted_no = case when vote_id = #{voteId} then  
                		(select count(*) from voteitem a, voteresult b where a.voteitem_id = b.voteitem_id and a.vote_id = #{voteId}) end
		WHERE 
		 vote_id = #{voteId}
 	</update>
 	
 	
 	<!-- 투표 삭제하기 -->
 	<update id="votedel" parameterType="ants.com.board.vote.model.VoteVo">
 		UPDATE vote SET del = 'Y' WHERE vote_id = #{voteId}
 	</update>

</mapper>