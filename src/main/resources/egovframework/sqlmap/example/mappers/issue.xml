<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="issue">

	<resultMap id="IssueVo" type="ants.com.board.memBoard.model.IssueVo">
		<result property="issueId" column="issue_id"/>
		<result property="issueTitle" column="issue_title"/>
		<result property="issueCont" column="issue_cont"/>
		<result property="regDt" column="reg_dt"/>
		<result property="categoryId" column="category_id"/>
		<result property="issueKind" column="issue_kind"/>
		<result property="issueDel" column="issue_del"/>
		<result property="todoId" column="todo_id"/>
		<result property="reqId" column="req_id"/>
		<result property="memId" column="mem_id"/>
	</resultMap>


   <!-- 이슈게시글 리스트 가져오기 -->
	<select id="getissuelist" resultMap ="IssueVo" parameterType="String">
	 	<![CDATA[
		select a.issue_id , a.issue_title , a.issue_cont , to_char(a.reg_dt,'YYYY-MM-DD') as reg_dt , b.mem_name as mem_id
		from( select issue_id, issue_title, issue_cont, reg_dt, issue_del, mem_id
		        from issue
		        where req_id = #{reqId}) a , member b
		where a.mem_id = b.mem_id and a.issue_del = 'n'
	    ]]>		
				
	</select>

	
	<!-- 각 이슈게시글 내용 가져오기 -->
	<select id="geteachissue"  resultMap ="IssueVo" parameterType="String">
		select  a.issue_id ,  a.issue_title , a.issue_cont ,TO_CHAR( a.reg_dt,'YYYY-MM-DD') as reg_dt, b.mem_name as mem_id
		from( select issue_id, issue_title, issue_cont, reg_dt , issue_del, mem_id
		        from issue
		        where issue_id = #{issueId} ) a , member b 
		where a.mem_id = b.mem_id and a.issue_del = 'n' 
			
		
	</select>
	
	
	<!-- 이슈 작성하기 -->
	<insert id="insertissue" parameterType="IssueVo">
		
		INSERT INTO issue (
		    issue_id, issue_title, issue_cont,  reg_dt,  category_id,  
		    issue_kind, issue_del, todo_id, req_id, mem_id
		) VALUES (
		    ISSUE_SEQ.nextval, #{issueTitle}, #{issueCont}, sysdate,  #{categoryId}, 
		    #{issueKind}, 'n', '', , #{memId}
		)
		
	</insert>
	
	<!-- 이슈 수정하기 -->
	<update id="updateissue" parameterType="IssueVo">
		UPDATE issue
	    <set>
	        <if test="issue_title != null">issue_title=#{issueTitle},</if>
	        <if test="issue_cont != null">issue_cont=#{issueCont},</if>
	        <if test="issue_kind != null">issue_kind=#{issueKind},</if>
	        <if test="category_id != null">category_id=#{categoryId},</if>	 	            
	        <if test="reg_dt != null">reg_dt=sydate,</if>	 	            
	        <if test="mem_id != null">mem_id=#{memId},</if>	 	            
	        <if test="issue_del != null">issue_del=#{issueDel},</if>	 	            
	        <if test="todo_id != null">todo_id=#{todoId},</if>	 	            
	        <if test="req_id != null">req_id=#{reqId}</if>	 	            
	    </set>    
	    where issue_id = #{issueId}
	</update>
	
	
	<!-- 이슈 삭제하기 -->
	<update id="delissue" parameterType="String"> 
		UPDATE issue 
			set issue_del = 'y' 
		where issue_id = #{issueId}
	</update>
	
	
	
</mapper>