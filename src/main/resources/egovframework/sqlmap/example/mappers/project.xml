<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ants.com.member.mapper.ProjectMapper">


	<select id="memInProjectList" parameterType="String"
		resultType="ants.com.member.model.ProjectVo">
		SELECT
			project.req_id, project.mem_id, project.pro_name,
			project.pro_percent as percent, project.reg_dt
		FROM(select * from project)project,
			projectmember projectmember
		WHERE
			projectmember.req_id = project.req_id
		and projectmember.mem_id = #{memId}
		and projectmember.promem_status='IN'
	</select>

	<select id="plInProjectList" parameterType="String"
		resultType="ants.com.member.model.ProjectVo">
		SELECT
			DISTINCT project.req_id, project.pro_name,
			project.mem_id,
			project.pro_percent as percent, project.reg_dt
		FROM(select * from	
			project)project,
			reqlist reqlist
		WHERE
			reqlist.req_id = project.req_id
		AND reqlist.pl_id= #{memId}
		AND reqlist.status ='ACCEPT'
	</select>
	
	
	<select id="pmInProjectList" parameterType="String"
		resultType="ants.com.member.model.ProjectVo">
		SELECT
			DISTINCT project.req_id, project.pro_name,
			project.mem_id,
			project.pro_percent as percent, project.reg_dt
			FROM	(select * from
					project)project,
					reqlist reqlist
		WHERE
			reqlist.req_id = project.req_id
		AND reqlist.mem_id= #{memId}
	</select>

	<select id="readReqList"
		resultType="ants.com.member.model.ReqVo"
		parameterType="java.lang.String">
		SELECT *
		  FROM REQLIST
		 WHERE REQ_ID IN (SELECT REQ_ID
							FROM REQLIST
						   WHERE PL_ID = #{plId}
							 AND STATUS = 'WAIT')
		    OR REQ_ID IN (SELECT REQ_ID
							FROM REQLIST A
						   WHERE A.PL_ID = #{plId}
							 AND A.STATUS = 'ACCEPT'
							 AND A.REQ_ID IN (SELECT B.REQ_ID
												FROM PROJECT B
											   WHERE PRO_NAME is NULL
												 AND MEM_ID IS NOT NULL))
	</select>

	<insert id="insertProject"
		parameterType="ants.com.member.model.ProjectVo">
		INSERT INTO PROJECT 
			(REQ_ID,MEM_ID,PRO_NAME,REG_DT,DEL)
		VALUES
			(#{reqId},#{memId,jdbcType=VARCHAR},#{proName,jdbcType=VARCHAR},SYSDATE,'N')
	</insert>

	<select id="userSearch" parameterType="java.lang.String"
		resultType="ants.com.member.model.MemberVo">
		SELECT * FROM MEMBER WHERE MEM_ID LIKE #{keyword}
	</select>

	<select id="chkMemId" parameterType="java.lang.String"
		resultType="ants.com.member.model.MemberVo">
		SELECT *
		FROM MEMBER
		WHERE MEM_ID = #{memId}
	</select>

	<insert id="insertPjtMember"
		parameterType="ants.com.member.model.ProjectMemberVo">
		INSERT INTO PROJECTMEMBER 
			(req_id, promem_id, mem_id, promem_status)
		VALUES (#{reqId}, PROMEM_SEQ.NEXTVAL, #{memId},#{promemStatus})

	</insert>

	<!-- 진행도 update -->
	<update id="propercentChange"
		parameterType="ants.com.member.model.ProjectVo">

		UPDATE PROJECT
		SET
			pro_percent =#{percent}
		WHERE
			req_id=#{reqId}

	</update>

	<!-- 프로젝트 update -->
	<update id="updateProject"
		parameterType="ants.com.member.model.ProjectVo">
		UPDATE PROJECT
		<set>
			<if test="memId != null">MEM_ID = #{memId},</if>
			<if test="proName != null">PRO_NAME = #{proName},</if>
			<if test="percent != null">PRO_PERCENT = #{percent},</if>
			<if test="regDt != null">REG_DT = #{regDt},</if>
			<if test="del != null">DEL = #{del}</if>
		</set>
		WHERE 1=1
		AND REQ_ID = #{reqId}
	</update>

	<!-- 개요페이지 프로젝트 정보 -->
	<select id="getoutlinepro" parameterType="String"
		resultType="ants.com.member.model.ProjectVo">
		SELECT
			p.req_id,
			p.mem_id,
			p.pro_name,
			TO_CHAR(round(p.pro_percent)) as percent,
			TO_CHAR(p.reg_dt,'yyyy-mm-dd') as reg_dt,
			p.del,
	        TO_CHAR((p.reg_dt + r.req_period),'yyyy-mm-dd') as endDt,
	        nvl(TRUNC(sysdate-to_date(to_char(p.reg_dt, 'yyyymmdd'),'yyyymmdd')),0) as elepsedTime
		FROM (select * from REQLIST) r,
			project p
		where r.req_id = p.req_id
        AND r.req_id =#{reqId}
	</select>
	<select id="getoutlinepromem" parameterType="java.lang.String"
		resultType="ants.com.member.model.ProjectMemberVo">
		SELECT
			p.req_id,
			p.promem_id,
			m.mem_name as MEM_ID,
			p.promem_status
		FROM (select * from member)m,
			projectmember p
		WHERE m.mem_id = p.mem_id
		AND req_id = #{reqId}
		AND PROMEM_STATUS ='IN'
	</select>
	<select id="getoutlinefiles" parameterType="java.lang.String"
		resultType="ants.com.file.model.PublicFileVo">
		 SELECT
		   nvl(round(sum(pub_size)),0) as pub_size
		FROM
		    publicfile
		where req_id=#{reqId}
	</select>
	<select id="getoutlinevote" parameterType="java.lang.String"
		resultType="ants.com.board.vote.model.VoteVo">
		    SELECT nvl(round(sum(round(decode(voted_no,0,'',voted_no) /vote_totalno,2)*100)/count(vote_totalno)),0) as votepercent
				FROM vote a, member b
				WHERE a.mem_id = b.mem_id
				AND a.req_id = #{reqId}
				AND a.del = 'N'
			
	</select>
	<select id="getoutlinereply" parameterType="java.lang.String"
		resultType="ants.com.board.memBoard.model.ReplyVo">
			SELECT CASE WHEN nvl((
        		SELECT COUNT(issue_id)
        		FROM issue WHERE req_id=#{reqId}
        		AND issue_del ='N') , 0) > 0 
        		THEN 
            		ROUND(((
        				SELECT COUNT(distinct(some_id))
        				FROM   reply WHERE req_id =#{reqId} AND del='N'
        				)/(
        				SELECT COUNT(issue_id)
        				FROM issue WHERE req_id=#{reqId}
        				AND issue_del ='N'
        				))*100)
            	ELSE 0 END AS replypercent FROM dual    
        
	</select>
	
	<select id="getoutlinsuggest" parameterType="java.lang.String"
		resultType="ants.com.board.memBoard.model.SuggestVo">
			SELECT  case when nvl((SELECT count(A.SGT_ID)
				  FROM SUGGEST A, (SELECT TODO_ID, MEM_ID, REQ_ID
				                     FROM TODO 
				                    WHERE REQ_ID = #{reqId}) B
				  WHERE A.TODO_ID = B.TODO_ID
				   AND A.DEL = 'N'),0)>0 THEN
						ROUND(((SELECT count(A.SGT_ID)
				  			FROM SUGGEST A, (SELECT TODO_ID, MEM_ID, REQ_ID
				                     FROM TODO 
				                    WHERE REQ_ID = #{reqId}) B
				 						WHERE A.TODO_ID = B.TODO_ID
									    AND A.DEL = 'N'
								        AND A.SGT_STATUS ='ACCEPT'
			            		)/(
			            		SELECT count(A.SGT_ID)
				  					FROM SUGGEST A, (SELECT TODO_ID, MEM_ID, REQ_ID
				                    	FROM TODO 
				                    	WHERE REQ_ID = #{reqId}) B
										WHERE A.TODO_ID = B.TODO_ID
				   						AND A.DEL = 'N'))*100)
			            ELSE 0 end as acceptpercent
			        FROM    dual
        
	</select>
	
	<select id="getoutlinsuggestreject" parameterType="java.lang.String"
		resultType="ants.com.board.memBoard.model.SuggestVo">
			SELECT  case when nvl((SELECT count(A.SGT_ID)
				  FROM SUGGEST A, (SELECT TODO_ID, MEM_ID, REQ_ID
				                     FROM TODO 
				                    WHERE REQ_ID = #{reqId}) B
				  WHERE A.TODO_ID = B.TODO_ID
				   AND A.DEL = 'N'),0)>0 THEN
						ROUND(((SELECT count(A.SGT_ID)
				  			FROM SUGGEST A, (SELECT TODO_ID, MEM_ID, REQ_ID
				                     FROM TODO 
				                    WHERE REQ_ID = #{reqId}) B
				 						WHERE A.TODO_ID = B.TODO_ID
									    AND A.DEL = 'N'
								        AND A.SGT_STATUS ='REJECT'
			            		)/(
			            		SELECT count(A.SGT_ID)
				  					FROM SUGGEST A, (SELECT TODO_ID, MEM_ID, REQ_ID
				                    	FROM TODO 
				                    	WHERE REQ_ID = #{reqId}) B
										WHERE A.TODO_ID = B.TODO_ID
				   						AND A.DEL = 'N'))*100)
			            ELSE 0 end as rejectpercent
			        FROM    dual
	</select>
	<select id="getoutlindeadline" parameterType="java.lang.String"
		resultType="ants.com.board.manageBoard.model.TodoVo">
			<![CDATA[             SELECT
                    TODO_TITLE,
                    todo_id,
					member.mem_name AS mem_id,
                    to_char(todo_end, 'YYYY-MM-dd') as todoEnd
				FROM( select *
					from member)member, todo todo
				WHERE
					member.mem_id = todo.mem_id
				AND
					todo.del = 'N'
				AND todo.req_id = #{reqId}
                AND ROWNUM <= 5
                and todo.TODO_PERCENT !='100'
                AND (Round(TO_DATE(TO_CHAR(SYSDATE, 'yyyymmdd')) -
					To_date(to_char(todo.todo_end,'yyyymmdd')),0)>=-7 and Round(TO_DATE(TO_CHAR(SYSDATE, 'yyyymmdd')) -
					To_date(to_char(todo.todo_end,'yyyymmdd')),0)<=0)
				order by todo_end asc]]> 
        
	</select>
	
	<update id="deleteProject" parameterType="java.lang.String">
		UPDATE project
		   SET del = 'Y'
		 WHERE req_id = #{reqId} 
	</update>
	
	<select id="chartsuggestcnt" parameterType="java.lang.String"
		resultType="ants.com.board.memBoard.model.SuggestVo">
		SELECT count(A.SGT_ID) as chartcnt,
	       c.mem_name as memName
		  FROM SUGGEST A, (SELECT TODO_ID, MEM_ID, REQ_ID
		                     FROM TODO 
		                    WHERE REQ_ID = #{reqId}) B, member c
		 WHERE A.TODO_ID = B.TODO_ID
		   AND A.DEL = 'N'
		   AND B.mem_id = c.mem_id 
	       group by c.mem_name
	</select>
	
</mapper>