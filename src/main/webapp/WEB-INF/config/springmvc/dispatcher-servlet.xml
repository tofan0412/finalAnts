<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

    <context:component-scan base-package="ants.com" annotation-config="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver" />

    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="language" />
    </bean>

<!--     <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"> -->
<!--         <property name="defaultErrorView" value="cmmn/egovError"/> -->
<!--         <property name="exceptionMappings"> -->
<!--             <props> -->
<!--                 <prop key="org.springframework.dao.DataAccessException">cmmn/dataAccessFailure</prop> -->
<!--                 <prop key="org.springframework.transaction.TransactionException">cmmn/transactionFailure</prop> -->
<!--                 <prop key="egovframework.rte.fdl.cmmn.exception.EgovBizException">cmmn/egovError</prop> -->
<!--                 <prop key="org.springframework.security.AccessDeniedException">cmmn/egovError</prop> -->
<!--             </props> -->
<!--         </property> -->
<!--     </bean> -->

<!--     <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" p:order="1" -->
<!-- 	    p:viewClass="org.springframework.web.servlet.view.JstlView" -->
<!-- 	    p:prefix="/WEB-INF/jsp/egovframework/example/" p:suffix=".jsp"/> -->

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- prefix : 접두어, suffix : 접미어 -->
		<!-- Controller가 반환하는 문자열에 prefix, suffix를 적용하여 해당 경로의 파일로 응답을 생성 LoginController.getView() 
			==> "login/view" prefix viewName suffix "/WEB-INF/views/" + "login/view" 
			+ ".jsp" "/WEB-INF/views/login/view.jsp" ㄴSpring에서 JSP로 응답을 생성할 때 일반적으로 사용하는 
			방법이다. -->
		<property name="order" value="2"/>
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>


    <bean id="paginationManager" class="egovframework.rte.ptl.mvc.tags.ui.pagination.DefaultPaginationManager">
        <property name="rendererType">
            <map>
                <entry key="image" value-ref="imageRenderer"/>
            </map>
        </property>
    </bean>
	<!-- /For Pagination Tag -->

    <mvc:view-controller path="/cmmn/validator.do" view-name="cmmn/validator"/>
    
    <!-- 정적자원 매핑처리 -->
	 <!-- localhost/resoureces.style.css -->
	 <mvc:resources mapping="/resources/**" location="/resources/" />
	 <mvc:resources mapping="/plugins/**" location="/resources/plugins/" />
	 <mvc:resources mapping="/dist/**" location="/resources/dist/"/>
    
    
</beans>